---
import MoreListItem from '@components/MoreListItem.astro';
import BaseLayout from '@layouts/BaseLayout.astro';
import { Content } from './_home-content.mdx';
---

<BaseLayout pageTitle="Plxtra" mainHeading="Open source retail trading platform">
	<main>
        <ul id="home-main-list">
            <MoreListItem href='./overviews/exchange-or-brokerage/'>For retail focused Exchange or Brokerage operations</MoreListItem>
            <MoreListItem href='./overviews/features/'>Feature rich, full solution</MoreListItem>
            <MoreListItem href='./overviews/extensibility/'>Highly extensible</MoreListItem>
            <MoreListItem href='./architecture/'>Thoughtfully engineered structure/architecture</MoreListItem>
            <MoreListItem href='./overviews/reliability/'>Scalable and reliable (with redundancy)</MoreListItem>
            <MoreListItem href='./overviews/programming-languages/'>C# back-end, Typescript front-end</MoreListItem>
            <MoreListItem href='./overviews/front-ends/'>Web, mobile and excel clients</MoreListItem>
            <MoreListItem href='./getting-started/'>Detail documentation</MoreListItem>
            <MoreListItem href='./overviews/previous-customers/'>Mature design and production proven</MoreListItem>
            <MoreListItem href='./overviews/licensing/'>Permissive licence (MIT)</MoreListItem>
            <MoreListItem href='./solutions/commercial-support/'>Commercial support available</MoreListItem>
            <MoreListItem href='./overviews/installation-deployment/'>Easy install and deploy (using Docker)</MoreListItem>
        </ul>

        <!-- https://stackoverflow.com/questions/14596213/shrink-div-to-text-thats-wrapped-to-its-max-width/73706430#73706430 -->

        <Content />

	</main>
</BaseLayout>

<style lang="scss">
    @use '@adornments/unordered-list';

    main {
        @include unordered-list.collapse-narrow;
    }

</style>

<script>
    const homeMainListElement = document.getElementById('home-main-list');
    if (homeMainListElement !== null) {
        const resizeObserver = new ResizeObserver(() => updateHomeMainListTextNodeWidths());
        resizeObserver.observe(homeMainListElement);

    }

    updateHomeMainListTextNodeWidths();

    function updateHomeMainListTextNodeWidths() {
        const range = document.createRange();
        const elementCollection = document.getElementsByClassName('more-list-item-slot-div');
        const count = elementCollection.length;
        for (let i = 0; i < count; i++) {
            const element = elementCollection.item(i);
            if (element !== null) {
                const htmlElement = element as HTMLElement;
                htmlElement.style.width = 'unset';
                htmlElement.style.boxSizing = 'unset';
            }
        }

        for (let i = 0; i < count; i++) {
            const element = elementCollection.item(i);
            if (element !== null) {
                const textNode = element.firstChild as ChildNode | null;

                if (textNode !== null && textNode.nodeType === Node.TEXT_NODE) {
                    range.selectNodeContents(textNode);
                    const { width } = range.getBoundingClientRect();
                    const htmlElement = element as HTMLElement;
                    htmlElement.style.width = width + "px";
                    htmlElement.style.boxSizing = "content-box";
                }
            }
        }
    }

</script>
